name: CI/CD Pipeline

on:
  push:
    branches: [ Tests, CI/CD-testing, main ]
    paths:
      - 'eco-books/backend/Dockerfile'
      - 'eco-books/frontend/Dockerfile'
      - 'eco-books/docker-compose.yml'
  pull_request:
    branches: [ Tests, CI/CD-testing, main ]
    paths:
      - 'eco-books/backend/Dockerfile'
      - 'eco-books/frontend/Dockerfile'
      - 'eco-books/docker-compose.yml'

jobs:
  docker:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/CI/CD-testing')) ||
      (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.head_ref == 'CI/CD-testing')) || github.ref == 'refs/heads/Tests'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./eco-books/frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/eco-books-frontend:latest

    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./eco-books/backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/eco-books-backend:latest
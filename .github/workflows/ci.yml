name: CI/CD Pipeline

on:
  push:
    branches: [ Tests, CI/CD-testing, main ]
  pull_request:
    branches: [ Tests, CI/CD-testing, main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: |
          eco-books/backend/package-lock.json
          eco-books/frontend/package-lock.json

    - name: Install Backend Dependencies
      working-directory: eco-books/backend
      run: npm ci

    - name: Run Backend Tests
      working-directory: eco-books/backend
      run: npm run test:all

    - name: Verify Vitest Installation
      working-directory: eco-books/backend
      run: npx vitest --version

    - name: Install Frontend Dependencies
      working-directory: eco-books/frontend
      run: npm ci

    - name: Build Frontend
      working-directory: eco-books/frontend
      run: npm run build

    # Frontend tests disabled - no test files exist yet
    # - name: Run Frontend Tests
    #   working-directory: eco-books/frontend
    #   run: npm run test

  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/CI/CD-testing')) ||
      (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.head_ref == 'CI/CD-testing')) || github.ref == 'refs/heads/Tests'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./eco-books/frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/eco-books-frontend:latest

    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./eco-books/backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/eco-books-backend:latest